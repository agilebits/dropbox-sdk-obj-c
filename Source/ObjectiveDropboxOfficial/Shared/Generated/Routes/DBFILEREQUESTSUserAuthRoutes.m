///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <ObjectiveDropboxOfficial/DBFILEREQUESTSUserAuthRoutes.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSCreateFileRequestArgs.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSCreateFileRequestError.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSFileRequest.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSFileRequestDeadline.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSFileRequestError.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSGeneralFileRequestsError.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSGetFileRequestArgs.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSGetFileRequestError.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSListFileRequestsError.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSListFileRequestsResult.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSRouteObjects.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSUpdateFileRequestArgs.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSUpdateFileRequestDeadline.h>
#import <ObjectiveDropboxOfficial/DBFILEREQUESTSUpdateFileRequestError.h>
#import <ObjectiveDropboxOfficial/DBRequestErrors.h>
#import <ObjectiveDropboxOfficial/DBStoneBase.h>
#import <ObjectiveDropboxOfficial/DBTransportClientProtocol.h>

@implementation DBFILEREQUESTSUserAuthRoutes

- (instancetype)init:(id<DBTransportClient>)client {
  self = [super init];
  if (self) {
    _client = client;
  }
  return self;
}

- (DBRpcTask *)create:(NSString *)title destination:(NSString *)destination {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSCreate;
  DBFILEREQUESTSCreateFileRequestArgs *arg =
      [[DBFILEREQUESTSCreateFileRequestArgs alloc] initWithTitle:title destination:destination];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)create:(NSString *)title
          destination:(NSString *)destination
             deadline:(DBFILEREQUESTSFileRequestDeadline *)deadline
                 open:(NSNumber *)open {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSCreate;
  DBFILEREQUESTSCreateFileRequestArgs *arg = [[DBFILEREQUESTSCreateFileRequestArgs alloc] initWithTitle:title
                                                                                            destination:destination
                                                                                               deadline:deadline
                                                                                                   open:open];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)get:(NSString *)id_ {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSGet;
  DBFILEREQUESTSGetFileRequestArgs *arg = [[DBFILEREQUESTSGetFileRequestArgs alloc] initWithId_:id_];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)list {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSList;
  return [self.client requestRpc:route arg:nil];
}

- (DBRpcTask *)update:(NSString *)id_ {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSUpdate;
  DBFILEREQUESTSUpdateFileRequestArgs *arg = [[DBFILEREQUESTSUpdateFileRequestArgs alloc] initWithId_:id_];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)update:(NSString *)id_
                title:(NSString *)title
          destination:(NSString *)destination
             deadline:(DBFILEREQUESTSUpdateFileRequestDeadline *)deadline
                 open:(NSNumber *)open {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSUpdate;
  DBFILEREQUESTSUpdateFileRequestArgs *arg = [[DBFILEREQUESTSUpdateFileRequestArgs alloc] initWithId_:id_
                                                                                                title:title
                                                                                          destination:destination
                                                                                             deadline:deadline
                                                                                                 open:open];
  return [self.client requestRpc:route arg:arg];
}

@end
