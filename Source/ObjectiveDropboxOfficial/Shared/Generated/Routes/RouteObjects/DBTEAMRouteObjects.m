///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <ObjectiveDropboxOfficial/DBTEAMRouteObjects.h>
#import <ObjectiveDropboxOfficial/DBASYNCLaunchEmptyResult.h>
#import <ObjectiveDropboxOfficial/DBASYNCLaunchResultBase.h>
#import <ObjectiveDropboxOfficial/DBASYNCPollEmptyResult.h>
#import <ObjectiveDropboxOfficial/DBASYNCPollError.h>
#import <ObjectiveDropboxOfficial/DBASYNCPollResultBase.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESAddTemplateResult.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESGetTemplateResult.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESListTemplateResult.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESModifyTemplateError.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESPropertyFieldTemplate.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESPropertyGroupTemplate.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESTemplateError.h>
#import <ObjectiveDropboxOfficial/DBFILEPROPERTIESUpdateTemplateResult.h>
#import <ObjectiveDropboxOfficial/DBFILESContentSyncSetting.h>
#import <ObjectiveDropboxOfficial/DBFILESSyncSetting.h>
#import <ObjectiveDropboxOfficial/DBFILESSyncSettingsError.h>
#import <ObjectiveDropboxOfficial/DBRequestErrors.h>
#import <ObjectiveDropboxOfficial/DBStoneBase.h>
#import <ObjectiveDropboxOfficial/DBTEAMActiveWebSession.h>
#import <ObjectiveDropboxOfficial/DBTEAMAdminTier.h>
#import <ObjectiveDropboxOfficial/DBTEAMApiApp.h>
#import <ObjectiveDropboxOfficial/DBTEAMBaseDfbReport.h>
#import <ObjectiveDropboxOfficial/DBTEAMBaseTeamFolderError.h>
#import <ObjectiveDropboxOfficial/DBTEAMCOMMONGroupManagementType.h>
#import <ObjectiveDropboxOfficial/DBTEAMCOMMONGroupSummary.h>
#import <ObjectiveDropboxOfficial/DBTEAMCustomQuotaError.h>
#import <ObjectiveDropboxOfficial/DBTEAMCustomQuotaResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMDateRangeError.h>
#import <ObjectiveDropboxOfficial/DBTEAMDesktopClientSession.h>
#import <ObjectiveDropboxOfficial/DBTEAMDevicesActive.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersListError.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersUpdateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersUpdateResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMExcludedUsersUpdateStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMFeatureValue.h>
#import <ObjectiveDropboxOfficial/DBTEAMFeaturesGetValuesBatchError.h>
#import <ObjectiveDropboxOfficial/DBTEAMFeaturesGetValuesBatchResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMGetActivityReport.h>
#import <ObjectiveDropboxOfficial/DBTEAMGetDevicesReport.h>
#import <ObjectiveDropboxOfficial/DBTEAMGetMembershipReport.h>
#import <ObjectiveDropboxOfficial/DBTEAMGetStorageReport.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupCreateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupDeleteError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupFullInfo.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMemberInfo.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMemberSelectorError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMemberSetAccessTypeError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMembersAddError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMembersChangeResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMembersRemoveError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupMembersSelectorError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupSelectorError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupSelectorWithTeamGroupError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupUpdateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsGetInfoError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsGetInfoItem.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsMembersListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsMembersListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMGroupsPollError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMemberAppsError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMemberAppsResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMemberDevicesError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMemberDevicesResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMembersAppsError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMembersAppsResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMembersDevicesError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListMembersDevicesResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMListTeamAppsError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListTeamAppsResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMListTeamDevicesError.h>
#import <ObjectiveDropboxOfficial/DBTEAMListTeamDevicesResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMMemberAddResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMMemberDevices.h>
#import <ObjectiveDropboxOfficial/DBTEAMMemberLinkedApps.h>
#import <ObjectiveDropboxOfficial/DBTEAMMemberProfile.h>
#import <ObjectiveDropboxOfficial/DBTEAMMemberSelectorError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersAddJobStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersAddLaunch.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersDeactivateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersGetInfoError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersGetInfoItem.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersListError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersRecoverError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersRemoveError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersSendWelcomeError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersSetPermissionsError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersSetPermissionsResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersSetProfileError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersSuspendError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersTransferFilesError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersTransferFormerMembersFilesError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMembersUnsuspendError.h>
#import <ObjectiveDropboxOfficial/DBTEAMMobileClientSession.h>
#import <ObjectiveDropboxOfficial/DBTEAMNamespaceMetadata.h>
#import <ObjectiveDropboxOfficial/DBTEAMPOLICIESTeamMemberPolicies.h>
#import <ObjectiveDropboxOfficial/DBTEAMRemoveCustomQuotaResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeDeviceSessionBatchError.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeDeviceSessionBatchResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeDeviceSessionError.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeDeviceSessionStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeLinkedAppBatchError.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeLinkedAppBatchResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeLinkedAppError.h>
#import <ObjectiveDropboxOfficial/DBTEAMRevokeLinkedAppStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMSetCustomQuotaError.h>
#import <ObjectiveDropboxOfficial/DBTEAMStorageBucket.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamAuthRoutes.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderAccessError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderActivateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderArchiveError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderArchiveJobStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderArchiveLaunch.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderCreateError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderGetInfoItem.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderInvalidStatusError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderListError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderMetadata.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderPermanentlyDeleteError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderRenameError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderStatus.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderTeamSharedDropboxError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamFolderUpdateSyncSettingsError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamGetInfoResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamMemberInfo.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamMemberProfile.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamNamespacesListContinueError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTeamNamespacesListResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMTokenGetAuthenticatedAdminError.h>
#import <ObjectiveDropboxOfficial/DBTEAMTokenGetAuthenticatedAdminResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMUserCustomQuotaResult.h>
#import <ObjectiveDropboxOfficial/DBTEAMUserSelectorArg.h>
#import <ObjectiveDropboxOfficial/DBTEAMUserSelectorError.h>

@implementation DBTEAMRouteObjects

static DBRoute *DBTEAMDevicesListMemberDevices;
static DBRoute *DBTEAMDevicesListMembersDevices;
static DBRoute *DBTEAMDevicesListTeamDevices;
static DBRoute *DBTEAMDevicesRevokeDeviceSession;
static DBRoute *DBTEAMDevicesRevokeDeviceSessionBatch;
static DBRoute *DBTEAMFeaturesGetValues;
static DBRoute *DBTEAMGetInfo;
static DBRoute *DBTEAMGroupsCreate;
static DBRoute *DBTEAMGroupsDelete;
static DBRoute *DBTEAMGroupsGetInfo;
static DBRoute *DBTEAMGroupsJobStatusGet;
static DBRoute *DBTEAMGroupsList;
static DBRoute *DBTEAMGroupsListContinue;
static DBRoute *DBTEAMGroupsMembersAdd;
static DBRoute *DBTEAMGroupsMembersList;
static DBRoute *DBTEAMGroupsMembersListContinue;
static DBRoute *DBTEAMGroupsMembersRemove;
static DBRoute *DBTEAMGroupsMembersSetAccessType;
static DBRoute *DBTEAMGroupsUpdate;
static DBRoute *DBTEAMLinkedAppsListMemberLinkedApps;
static DBRoute *DBTEAMLinkedAppsListMembersLinkedApps;
static DBRoute *DBTEAMLinkedAppsListTeamLinkedApps;
static DBRoute *DBTEAMLinkedAppsRevokeLinkedApp;
static DBRoute *DBTEAMLinkedAppsRevokeLinkedAppBatch;
static DBRoute *DBTEAMMemberSpaceLimitsExcludedUsersAdd;
static DBRoute *DBTEAMMemberSpaceLimitsExcludedUsersList;
static DBRoute *DBTEAMMemberSpaceLimitsExcludedUsersListContinue;
static DBRoute *DBTEAMMemberSpaceLimitsExcludedUsersRemove;
static DBRoute *DBTEAMMemberSpaceLimitsGetCustomQuota;
static DBRoute *DBTEAMMemberSpaceLimitsRemoveCustomQuota;
static DBRoute *DBTEAMMemberSpaceLimitsSetCustomQuota;
static DBRoute *DBTEAMMembersAdd;
static DBRoute *DBTEAMMembersAddJobStatusGet;
static DBRoute *DBTEAMMembersGetInfo;
static DBRoute *DBTEAMMembersList;
static DBRoute *DBTEAMMembersListContinue;
static DBRoute *DBTEAMMembersMoveFormerMemberFiles;
static DBRoute *DBTEAMMembersMoveFormerMemberFilesJobStatusCheck;
static DBRoute *DBTEAMMembersRecover;
static DBRoute *DBTEAMMembersRemove;
static DBRoute *DBTEAMMembersRemoveJobStatusGet;
static DBRoute *DBTEAMMembersSendWelcomeEmail;
static DBRoute *DBTEAMMembersSetAdminPermissions;
static DBRoute *DBTEAMMembersSetProfile;
static DBRoute *DBTEAMMembersSuspend;
static DBRoute *DBTEAMMembersUnsuspend;
static DBRoute *DBTEAMNamespacesList;
static DBRoute *DBTEAMNamespacesListContinue;
static DBRoute *DBTEAMPropertiesTemplateAdd;
static DBRoute *DBTEAMPropertiesTemplateGet;
static DBRoute *DBTEAMPropertiesTemplateList;
static DBRoute *DBTEAMPropertiesTemplateUpdate;
static DBRoute *DBTEAMReportsGetActivity;
static DBRoute *DBTEAMReportsGetDevices;
static DBRoute *DBTEAMReportsGetMembership;
static DBRoute *DBTEAMReportsGetStorage;
static DBRoute *DBTEAMTeamFolderActivate;
static DBRoute *DBTEAMTeamFolderArchive;
static DBRoute *DBTEAMTeamFolderArchiveCheck;
static DBRoute *DBTEAMTeamFolderCreate;
static DBRoute *DBTEAMTeamFolderGetInfo;
static DBRoute *DBTEAMTeamFolderList;
static DBRoute *DBTEAMTeamFolderListContinue;
static DBRoute *DBTEAMTeamFolderPermanentlyDelete;
static DBRoute *DBTEAMTeamFolderRename;
static DBRoute *DBTEAMTeamFolderUpdateSyncSettings;
static DBRoute *DBTEAMTokenGetAuthenticatedAdmin;

+ (DBRoute *)DBTEAMDevicesListMemberDevices {
  if (!DBTEAMDevicesListMemberDevices) {
    DBTEAMDevicesListMemberDevices = [[DBRoute alloc] init:@"devices/list_member_devices"
                                                namespace_:@"team"
                                                deprecated:@NO
                                                resultType:[DBTEAMListMemberDevicesResult class]
                                                 errorType:[DBTEAMListMemberDevicesError class]
                                                     attrs:@{
                                                       @"auth" : @"team",
                                                       @"host" : @"api",
                                                       @"style" : @"rpc"
                                                     }
                                     dataStructSerialBlock:nil
                                   dataStructDeserialBlock:nil];
  }
  return DBTEAMDevicesListMemberDevices;
}

+ (DBRoute *)DBTEAMDevicesListMembersDevices {
  if (!DBTEAMDevicesListMembersDevices) {
    DBTEAMDevicesListMembersDevices = [[DBRoute alloc] init:@"devices/list_members_devices"
                                                 namespace_:@"team"
                                                 deprecated:@NO
                                                 resultType:[DBTEAMListMembersDevicesResult class]
                                                  errorType:[DBTEAMListMembersDevicesError class]
                                                      attrs:@{
                                                        @"auth" : @"team",
                                                        @"host" : @"api",
                                                        @"style" : @"rpc"
                                                      }
                                      dataStructSerialBlock:nil
                                    dataStructDeserialBlock:nil];
  }
  return DBTEAMDevicesListMembersDevices;
}

+ (DBRoute *)DBTEAMDevicesListTeamDevices {
  if (!DBTEAMDevicesListTeamDevices) {
    DBTEAMDevicesListTeamDevices = [[DBRoute alloc] init:@"devices/list_team_devices"
                                              namespace_:@"team"
                                              deprecated:@YES
                                              resultType:[DBTEAMListTeamDevicesResult class]
                                               errorType:[DBTEAMListTeamDevicesError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMDevicesListTeamDevices;
}

+ (DBRoute *)DBTEAMDevicesRevokeDeviceSession {
  if (!DBTEAMDevicesRevokeDeviceSession) {
    DBTEAMDevicesRevokeDeviceSession = [[DBRoute alloc] init:@"devices/revoke_device_session"
                                                  namespace_:@"team"
                                                  deprecated:@NO
                                                  resultType:nil
                                                   errorType:[DBTEAMRevokeDeviceSessionError class]
                                                       attrs:@{
                                                         @"auth" : @"team",
                                                         @"host" : @"api",
                                                         @"style" : @"rpc"
                                                       }
                                       dataStructSerialBlock:nil
                                     dataStructDeserialBlock:nil];
  }
  return DBTEAMDevicesRevokeDeviceSession;
}

+ (DBRoute *)DBTEAMDevicesRevokeDeviceSessionBatch {
  if (!DBTEAMDevicesRevokeDeviceSessionBatch) {
    DBTEAMDevicesRevokeDeviceSessionBatch = [[DBRoute alloc] init:@"devices/revoke_device_session_batch"
                                                       namespace_:@"team"
                                                       deprecated:@NO
                                                       resultType:[DBTEAMRevokeDeviceSessionBatchResult class]
                                                        errorType:[DBTEAMRevokeDeviceSessionBatchError class]
                                                            attrs:@{
                                                              @"auth" : @"team",
                                                              @"host" : @"api",
                                                              @"style" : @"rpc"
                                                            }
                                            dataStructSerialBlock:nil
                                          dataStructDeserialBlock:nil];
  }
  return DBTEAMDevicesRevokeDeviceSessionBatch;
}

+ (DBRoute *)DBTEAMFeaturesGetValues {
  if (!DBTEAMFeaturesGetValues) {
    DBTEAMFeaturesGetValues = [[DBRoute alloc] init:@"features/get_values"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMFeaturesGetValuesBatchResult class]
                                          errorType:[DBTEAMFeaturesGetValuesBatchError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMFeaturesGetValues;
}

+ (DBRoute *)DBTEAMGetInfo {
  if (!DBTEAMGetInfo) {
    DBTEAMGetInfo = [[DBRoute alloc] init:@"get_info"
                               namespace_:@"team"
                               deprecated:@NO
                               resultType:[DBTEAMTeamGetInfoResult class]
                                errorType:nil
                                    attrs:@{
                                      @"auth" : @"team",
                                      @"host" : @"api",
                                      @"style" : @"rpc"
                                    }
                    dataStructSerialBlock:nil
                  dataStructDeserialBlock:nil];
  }
  return DBTEAMGetInfo;
}

+ (DBRoute *)DBTEAMGroupsCreate {
  if (!DBTEAMGroupsCreate) {
    DBTEAMGroupsCreate = [[DBRoute alloc] init:@"groups/create"
                                    namespace_:@"team"
                                    deprecated:@NO
                                    resultType:[DBTEAMGroupFullInfo class]
                                     errorType:[DBTEAMGroupCreateError class]
                                         attrs:@{
                                           @"auth" : @"team",
                                           @"host" : @"api",
                                           @"style" : @"rpc"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsCreate;
}

+ (DBRoute *)DBTEAMGroupsDelete {
  if (!DBTEAMGroupsDelete) {
    DBTEAMGroupsDelete = [[DBRoute alloc] init:@"groups/delete"
                                    namespace_:@"team"
                                    deprecated:@NO
                                    resultType:[DBASYNCLaunchEmptyResult class]
                                     errorType:[DBTEAMGroupDeleteError class]
                                         attrs:@{
                                           @"auth" : @"team",
                                           @"host" : @"api",
                                           @"style" : @"rpc"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsDelete;
}

+ (DBRoute *)DBTEAMGroupsGetInfo {
  if (!DBTEAMGroupsGetInfo) {
    DBTEAMGroupsGetInfo = [[DBRoute alloc] init:@"groups/get_info"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMGroupsGetInfoItem *> class]
        errorType:[DBTEAMGroupsGetInfoError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMGroupsGetInfoItemSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMGroupsGetInfo;
}

+ (DBRoute *)DBTEAMGroupsJobStatusGet {
  if (!DBTEAMGroupsJobStatusGet) {
    DBTEAMGroupsJobStatusGet = [[DBRoute alloc] init:@"groups/job_status/get"
                                          namespace_:@"team"
                                          deprecated:@NO
                                          resultType:[DBASYNCPollEmptyResult class]
                                           errorType:[DBTEAMGroupsPollError class]
                                               attrs:@{
                                                 @"auth" : @"team",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsJobStatusGet;
}

+ (DBRoute *)DBTEAMGroupsList {
  if (!DBTEAMGroupsList) {
    DBTEAMGroupsList = [[DBRoute alloc] init:@"groups/list"
                                  namespace_:@"team"
                                  deprecated:@NO
                                  resultType:[DBTEAMGroupsListResult class]
                                   errorType:nil
                                       attrs:@{
                                         @"auth" : @"team",
                                         @"host" : @"api",
                                         @"style" : @"rpc"
                                       }
                       dataStructSerialBlock:nil
                     dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsList;
}

+ (DBRoute *)DBTEAMGroupsListContinue {
  if (!DBTEAMGroupsListContinue) {
    DBTEAMGroupsListContinue = [[DBRoute alloc] init:@"groups/list/continue"
                                          namespace_:@"team"
                                          deprecated:@NO
                                          resultType:[DBTEAMGroupsListResult class]
                                           errorType:[DBTEAMGroupsListContinueError class]
                                               attrs:@{
                                                 @"auth" : @"team",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsListContinue;
}

+ (DBRoute *)DBTEAMGroupsMembersAdd {
  if (!DBTEAMGroupsMembersAdd) {
    DBTEAMGroupsMembersAdd = [[DBRoute alloc] init:@"groups/members/add"
                                        namespace_:@"team"
                                        deprecated:@NO
                                        resultType:[DBTEAMGroupMembersChangeResult class]
                                         errorType:[DBTEAMGroupMembersAddError class]
                                             attrs:@{
                                               @"auth" : @"team",
                                               @"host" : @"api",
                                               @"style" : @"rpc"
                                             }
                             dataStructSerialBlock:nil
                           dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsMembersAdd;
}

+ (DBRoute *)DBTEAMGroupsMembersList {
  if (!DBTEAMGroupsMembersList) {
    DBTEAMGroupsMembersList = [[DBRoute alloc] init:@"groups/members/list"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMGroupsMembersListResult class]
                                          errorType:[DBTEAMGroupSelectorError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsMembersList;
}

+ (DBRoute *)DBTEAMGroupsMembersListContinue {
  if (!DBTEAMGroupsMembersListContinue) {
    DBTEAMGroupsMembersListContinue = [[DBRoute alloc] init:@"groups/members/list/continue"
                                                 namespace_:@"team"
                                                 deprecated:@NO
                                                 resultType:[DBTEAMGroupsMembersListResult class]
                                                  errorType:[DBTEAMGroupsMembersListContinueError class]
                                                      attrs:@{
                                                        @"auth" : @"team",
                                                        @"host" : @"api",
                                                        @"style" : @"rpc"
                                                      }
                                      dataStructSerialBlock:nil
                                    dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsMembersListContinue;
}

+ (DBRoute *)DBTEAMGroupsMembersRemove {
  if (!DBTEAMGroupsMembersRemove) {
    DBTEAMGroupsMembersRemove = [[DBRoute alloc] init:@"groups/members/remove"
                                           namespace_:@"team"
                                           deprecated:@NO
                                           resultType:[DBTEAMGroupMembersChangeResult class]
                                            errorType:[DBTEAMGroupMembersRemoveError class]
                                                attrs:@{
                                                  @"auth" : @"team",
                                                  @"host" : @"api",
                                                  @"style" : @"rpc"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsMembersRemove;
}

+ (DBRoute *)DBTEAMGroupsMembersSetAccessType {
  if (!DBTEAMGroupsMembersSetAccessType) {
    DBTEAMGroupsMembersSetAccessType = [[DBRoute alloc] init:@"groups/members/set_access_type"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMGroupsGetInfoItem *> class]
        errorType:[DBTEAMGroupMemberSetAccessTypeError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMGroupsGetInfoItemSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMGroupsMembersSetAccessType;
}

+ (DBRoute *)DBTEAMGroupsUpdate {
  if (!DBTEAMGroupsUpdate) {
    DBTEAMGroupsUpdate = [[DBRoute alloc] init:@"groups/update"
                                    namespace_:@"team"
                                    deprecated:@NO
                                    resultType:[DBTEAMGroupFullInfo class]
                                     errorType:[DBTEAMGroupUpdateError class]
                                         attrs:@{
                                           @"auth" : @"team",
                                           @"host" : @"api",
                                           @"style" : @"rpc"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBTEAMGroupsUpdate;
}

+ (DBRoute *)DBTEAMLinkedAppsListMemberLinkedApps {
  if (!DBTEAMLinkedAppsListMemberLinkedApps) {
    DBTEAMLinkedAppsListMemberLinkedApps = [[DBRoute alloc] init:@"linked_apps/list_member_linked_apps"
                                                      namespace_:@"team"
                                                      deprecated:@NO
                                                      resultType:[DBTEAMListMemberAppsResult class]
                                                       errorType:[DBTEAMListMemberAppsError class]
                                                           attrs:@{
                                                             @"auth" : @"team",
                                                             @"host" : @"api",
                                                             @"style" : @"rpc"
                                                           }
                                           dataStructSerialBlock:nil
                                         dataStructDeserialBlock:nil];
  }
  return DBTEAMLinkedAppsListMemberLinkedApps;
}

+ (DBRoute *)DBTEAMLinkedAppsListMembersLinkedApps {
  if (!DBTEAMLinkedAppsListMembersLinkedApps) {
    DBTEAMLinkedAppsListMembersLinkedApps = [[DBRoute alloc] init:@"linked_apps/list_members_linked_apps"
                                                       namespace_:@"team"
                                                       deprecated:@NO
                                                       resultType:[DBTEAMListMembersAppsResult class]
                                                        errorType:[DBTEAMListMembersAppsError class]
                                                            attrs:@{
                                                              @"auth" : @"team",
                                                              @"host" : @"api",
                                                              @"style" : @"rpc"
                                                            }
                                            dataStructSerialBlock:nil
                                          dataStructDeserialBlock:nil];
  }
  return DBTEAMLinkedAppsListMembersLinkedApps;
}

+ (DBRoute *)DBTEAMLinkedAppsListTeamLinkedApps {
  if (!DBTEAMLinkedAppsListTeamLinkedApps) {
    DBTEAMLinkedAppsListTeamLinkedApps = [[DBRoute alloc] init:@"linked_apps/list_team_linked_apps"
                                                    namespace_:@"team"
                                                    deprecated:@YES
                                                    resultType:[DBTEAMListTeamAppsResult class]
                                                     errorType:[DBTEAMListTeamAppsError class]
                                                         attrs:@{
                                                           @"auth" : @"team",
                                                           @"host" : @"api",
                                                           @"style" : @"rpc"
                                                         }
                                         dataStructSerialBlock:nil
                                       dataStructDeserialBlock:nil];
  }
  return DBTEAMLinkedAppsListTeamLinkedApps;
}

+ (DBRoute *)DBTEAMLinkedAppsRevokeLinkedApp {
  if (!DBTEAMLinkedAppsRevokeLinkedApp) {
    DBTEAMLinkedAppsRevokeLinkedApp = [[DBRoute alloc] init:@"linked_apps/revoke_linked_app"
                                                 namespace_:@"team"
                                                 deprecated:@NO
                                                 resultType:nil
                                                  errorType:[DBTEAMRevokeLinkedAppError class]
                                                      attrs:@{
                                                        @"auth" : @"team",
                                                        @"host" : @"api",
                                                        @"style" : @"rpc"
                                                      }
                                      dataStructSerialBlock:nil
                                    dataStructDeserialBlock:nil];
  }
  return DBTEAMLinkedAppsRevokeLinkedApp;
}

+ (DBRoute *)DBTEAMLinkedAppsRevokeLinkedAppBatch {
  if (!DBTEAMLinkedAppsRevokeLinkedAppBatch) {
    DBTEAMLinkedAppsRevokeLinkedAppBatch = [[DBRoute alloc] init:@"linked_apps/revoke_linked_app_batch"
                                                      namespace_:@"team"
                                                      deprecated:@NO
                                                      resultType:[DBTEAMRevokeLinkedAppBatchResult class]
                                                       errorType:[DBTEAMRevokeLinkedAppBatchError class]
                                                           attrs:@{
                                                             @"auth" : @"team",
                                                             @"host" : @"api",
                                                             @"style" : @"rpc"
                                                           }
                                           dataStructSerialBlock:nil
                                         dataStructDeserialBlock:nil];
  }
  return DBTEAMLinkedAppsRevokeLinkedAppBatch;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsExcludedUsersAdd {
  if (!DBTEAMMemberSpaceLimitsExcludedUsersAdd) {
    DBTEAMMemberSpaceLimitsExcludedUsersAdd = [[DBRoute alloc] init:@"member_space_limits/excluded_users/add"
                                                         namespace_:@"team"
                                                         deprecated:@NO
                                                         resultType:[DBTEAMExcludedUsersUpdateResult class]
                                                          errorType:[DBTEAMExcludedUsersUpdateError class]
                                                              attrs:@{
                                                                @"auth" : @"team",
                                                                @"host" : @"api",
                                                                @"style" : @"rpc"
                                                              }
                                              dataStructSerialBlock:nil
                                            dataStructDeserialBlock:nil];
  }
  return DBTEAMMemberSpaceLimitsExcludedUsersAdd;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsExcludedUsersList {
  if (!DBTEAMMemberSpaceLimitsExcludedUsersList) {
    DBTEAMMemberSpaceLimitsExcludedUsersList = [[DBRoute alloc] init:@"member_space_limits/excluded_users/list"
                                                          namespace_:@"team"
                                                          deprecated:@NO
                                                          resultType:[DBTEAMExcludedUsersListResult class]
                                                           errorType:[DBTEAMExcludedUsersListError class]
                                                               attrs:@{
                                                                 @"auth" : @"team",
                                                                 @"host" : @"api",
                                                                 @"style" : @"rpc"
                                                               }
                                               dataStructSerialBlock:nil
                                             dataStructDeserialBlock:nil];
  }
  return DBTEAMMemberSpaceLimitsExcludedUsersList;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsExcludedUsersListContinue {
  if (!DBTEAMMemberSpaceLimitsExcludedUsersListContinue) {
    DBTEAMMemberSpaceLimitsExcludedUsersListContinue =
        [[DBRoute alloc] init:@"member_space_limits/excluded_users/list/continue"
                         namespace_:@"team"
                         deprecated:@NO
                         resultType:[DBTEAMExcludedUsersListResult class]
                          errorType:[DBTEAMExcludedUsersListContinueError class]
                              attrs:@{
                                @"auth" : @"team",
                                @"host" : @"api",
                                @"style" : @"rpc"
                              }
              dataStructSerialBlock:nil
            dataStructDeserialBlock:nil];
  }
  return DBTEAMMemberSpaceLimitsExcludedUsersListContinue;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsExcludedUsersRemove {
  if (!DBTEAMMemberSpaceLimitsExcludedUsersRemove) {
    DBTEAMMemberSpaceLimitsExcludedUsersRemove = [[DBRoute alloc] init:@"member_space_limits/excluded_users/remove"
                                                            namespace_:@"team"
                                                            deprecated:@NO
                                                            resultType:[DBTEAMExcludedUsersUpdateResult class]
                                                             errorType:[DBTEAMExcludedUsersUpdateError class]
                                                                 attrs:@{
                                                                   @"auth" : @"team",
                                                                   @"host" : @"api",
                                                                   @"style" : @"rpc"
                                                                 }
                                                 dataStructSerialBlock:nil
                                               dataStructDeserialBlock:nil];
  }
  return DBTEAMMemberSpaceLimitsExcludedUsersRemove;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsGetCustomQuota {
  if (!DBTEAMMemberSpaceLimitsGetCustomQuota) {
    DBTEAMMemberSpaceLimitsGetCustomQuota = [[DBRoute alloc] init:@"member_space_limits/get_custom_quota"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMCustomQuotaResult *> class]
        errorType:[DBTEAMCustomQuotaError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMCustomQuotaResultSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMMemberSpaceLimitsGetCustomQuota;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsRemoveCustomQuota {
  if (!DBTEAMMemberSpaceLimitsRemoveCustomQuota) {
    DBTEAMMemberSpaceLimitsRemoveCustomQuota = [[DBRoute alloc] init:@"member_space_limits/remove_custom_quota"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMRemoveCustomQuotaResult *> class]
        errorType:[DBTEAMCustomQuotaError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMRemoveCustomQuotaResultSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMMemberSpaceLimitsRemoveCustomQuota;
}

+ (DBRoute *)DBTEAMMemberSpaceLimitsSetCustomQuota {
  if (!DBTEAMMemberSpaceLimitsSetCustomQuota) {
    DBTEAMMemberSpaceLimitsSetCustomQuota = [[DBRoute alloc] init:@"member_space_limits/set_custom_quota"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMCustomQuotaResult *> class]
        errorType:[DBTEAMSetCustomQuotaError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMCustomQuotaResultSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMMemberSpaceLimitsSetCustomQuota;
}

+ (DBRoute *)DBTEAMMembersAdd {
  if (!DBTEAMMembersAdd) {
    DBTEAMMembersAdd = [[DBRoute alloc] init:@"members/add"
                                  namespace_:@"team"
                                  deprecated:@NO
                                  resultType:[DBTEAMMembersAddLaunch class]
                                   errorType:nil
                                       attrs:@{
                                         @"auth" : @"team",
                                         @"host" : @"api",
                                         @"style" : @"rpc"
                                       }
                       dataStructSerialBlock:nil
                     dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersAdd;
}

+ (DBRoute *)DBTEAMMembersAddJobStatusGet {
  if (!DBTEAMMembersAddJobStatusGet) {
    DBTEAMMembersAddJobStatusGet = [[DBRoute alloc] init:@"members/add/job_status/get"
                                              namespace_:@"team"
                                              deprecated:@NO
                                              resultType:[DBTEAMMembersAddJobStatus class]
                                               errorType:[DBASYNCPollError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersAddJobStatusGet;
}

+ (DBRoute *)DBTEAMMembersGetInfo {
  if (!DBTEAMMembersGetInfo) {
    DBTEAMMembersGetInfo = [[DBRoute alloc] init:@"members/get_info"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMMembersGetInfoItem *> class]
        errorType:[DBTEAMMembersGetInfoError class]
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMMembersGetInfoItemSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMMembersGetInfo;
}

+ (DBRoute *)DBTEAMMembersList {
  if (!DBTEAMMembersList) {
    DBTEAMMembersList = [[DBRoute alloc] init:@"members/list"
                                   namespace_:@"team"
                                   deprecated:@NO
                                   resultType:[DBTEAMMembersListResult class]
                                    errorType:[DBTEAMMembersListError class]
                                        attrs:@{
                                          @"auth" : @"team",
                                          @"host" : @"api",
                                          @"style" : @"rpc"
                                        }
                        dataStructSerialBlock:nil
                      dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersList;
}

+ (DBRoute *)DBTEAMMembersListContinue {
  if (!DBTEAMMembersListContinue) {
    DBTEAMMembersListContinue = [[DBRoute alloc] init:@"members/list/continue"
                                           namespace_:@"team"
                                           deprecated:@NO
                                           resultType:[DBTEAMMembersListResult class]
                                            errorType:[DBTEAMMembersListContinueError class]
                                                attrs:@{
                                                  @"auth" : @"team",
                                                  @"host" : @"api",
                                                  @"style" : @"rpc"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersListContinue;
}

+ (DBRoute *)DBTEAMMembersMoveFormerMemberFiles {
  if (!DBTEAMMembersMoveFormerMemberFiles) {
    DBTEAMMembersMoveFormerMemberFiles = [[DBRoute alloc] init:@"members/move_former_member_files"
                                                    namespace_:@"team"
                                                    deprecated:@NO
                                                    resultType:[DBASYNCLaunchEmptyResult class]
                                                     errorType:[DBTEAMMembersTransferFormerMembersFilesError class]
                                                         attrs:@{
                                                           @"auth" : @"team",
                                                           @"host" : @"api",
                                                           @"style" : @"rpc"
                                                         }
                                         dataStructSerialBlock:nil
                                       dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersMoveFormerMemberFiles;
}

+ (DBRoute *)DBTEAMMembersMoveFormerMemberFilesJobStatusCheck {
  if (!DBTEAMMembersMoveFormerMemberFilesJobStatusCheck) {
    DBTEAMMembersMoveFormerMemberFilesJobStatusCheck =
        [[DBRoute alloc] init:@"members/move_former_member_files/job_status/check"
                         namespace_:@"team"
                         deprecated:@NO
                         resultType:[DBASYNCPollEmptyResult class]
                          errorType:[DBASYNCPollError class]
                              attrs:@{
                                @"auth" : @"team",
                                @"host" : @"api",
                                @"style" : @"rpc"
                              }
              dataStructSerialBlock:nil
            dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersMoveFormerMemberFilesJobStatusCheck;
}

+ (DBRoute *)DBTEAMMembersRecover {
  if (!DBTEAMMembersRecover) {
    DBTEAMMembersRecover = [[DBRoute alloc] init:@"members/recover"
                                      namespace_:@"team"
                                      deprecated:@NO
                                      resultType:nil
                                       errorType:[DBTEAMMembersRecoverError class]
                                           attrs:@{
                                             @"auth" : @"team",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersRecover;
}

+ (DBRoute *)DBTEAMMembersRemove {
  if (!DBTEAMMembersRemove) {
    DBTEAMMembersRemove = [[DBRoute alloc] init:@"members/remove"
                                     namespace_:@"team"
                                     deprecated:@NO
                                     resultType:[DBASYNCLaunchEmptyResult class]
                                      errorType:[DBTEAMMembersRemoveError class]
                                          attrs:@{
                                            @"auth" : @"team",
                                            @"host" : @"api",
                                            @"style" : @"rpc"
                                          }
                          dataStructSerialBlock:nil
                        dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersRemove;
}

+ (DBRoute *)DBTEAMMembersRemoveJobStatusGet {
  if (!DBTEAMMembersRemoveJobStatusGet) {
    DBTEAMMembersRemoveJobStatusGet = [[DBRoute alloc] init:@"members/remove/job_status/get"
                                                 namespace_:@"team"
                                                 deprecated:@NO
                                                 resultType:[DBASYNCPollEmptyResult class]
                                                  errorType:[DBASYNCPollError class]
                                                      attrs:@{
                                                        @"auth" : @"team",
                                                        @"host" : @"api",
                                                        @"style" : @"rpc"
                                                      }
                                      dataStructSerialBlock:nil
                                    dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersRemoveJobStatusGet;
}

+ (DBRoute *)DBTEAMMembersSendWelcomeEmail {
  if (!DBTEAMMembersSendWelcomeEmail) {
    DBTEAMMembersSendWelcomeEmail = [[DBRoute alloc] init:@"members/send_welcome_email"
                                               namespace_:@"team"
                                               deprecated:@NO
                                               resultType:nil
                                                errorType:[DBTEAMMembersSendWelcomeError class]
                                                    attrs:@{
                                                      @"auth" : @"team",
                                                      @"host" : @"api",
                                                      @"style" : @"rpc"
                                                    }
                                    dataStructSerialBlock:nil
                                  dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersSendWelcomeEmail;
}

+ (DBRoute *)DBTEAMMembersSetAdminPermissions {
  if (!DBTEAMMembersSetAdminPermissions) {
    DBTEAMMembersSetAdminPermissions = [[DBRoute alloc] init:@"members/set_admin_permissions"
                                                  namespace_:@"team"
                                                  deprecated:@NO
                                                  resultType:[DBTEAMMembersSetPermissionsResult class]
                                                   errorType:[DBTEAMMembersSetPermissionsError class]
                                                       attrs:@{
                                                         @"auth" : @"team",
                                                         @"host" : @"api",
                                                         @"style" : @"rpc"
                                                       }
                                       dataStructSerialBlock:nil
                                     dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersSetAdminPermissions;
}

+ (DBRoute *)DBTEAMMembersSetProfile {
  if (!DBTEAMMembersSetProfile) {
    DBTEAMMembersSetProfile = [[DBRoute alloc] init:@"members/set_profile"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMTeamMemberInfo class]
                                          errorType:[DBTEAMMembersSetProfileError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersSetProfile;
}

+ (DBRoute *)DBTEAMMembersSuspend {
  if (!DBTEAMMembersSuspend) {
    DBTEAMMembersSuspend = [[DBRoute alloc] init:@"members/suspend"
                                      namespace_:@"team"
                                      deprecated:@NO
                                      resultType:nil
                                       errorType:[DBTEAMMembersSuspendError class]
                                           attrs:@{
                                             @"auth" : @"team",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersSuspend;
}

+ (DBRoute *)DBTEAMMembersUnsuspend {
  if (!DBTEAMMembersUnsuspend) {
    DBTEAMMembersUnsuspend = [[DBRoute alloc] init:@"members/unsuspend"
                                        namespace_:@"team"
                                        deprecated:@NO
                                        resultType:nil
                                         errorType:[DBTEAMMembersUnsuspendError class]
                                             attrs:@{
                                               @"auth" : @"team",
                                               @"host" : @"api",
                                               @"style" : @"rpc"
                                             }
                             dataStructSerialBlock:nil
                           dataStructDeserialBlock:nil];
  }
  return DBTEAMMembersUnsuspend;
}

+ (DBRoute *)DBTEAMNamespacesList {
  if (!DBTEAMNamespacesList) {
    DBTEAMNamespacesList = [[DBRoute alloc] init:@"namespaces/list"
                                      namespace_:@"team"
                                      deprecated:@NO
                                      resultType:[DBTEAMTeamNamespacesListResult class]
                                       errorType:nil
                                           attrs:@{
                                             @"auth" : @"team",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBTEAMNamespacesList;
}

+ (DBRoute *)DBTEAMNamespacesListContinue {
  if (!DBTEAMNamespacesListContinue) {
    DBTEAMNamespacesListContinue = [[DBRoute alloc] init:@"namespaces/list/continue"
                                              namespace_:@"team"
                                              deprecated:@NO
                                              resultType:[DBTEAMTeamNamespacesListResult class]
                                               errorType:[DBTEAMTeamNamespacesListContinueError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMNamespacesListContinue;
}

+ (DBRoute *)DBTEAMPropertiesTemplateAdd {
  if (!DBTEAMPropertiesTemplateAdd) {
    DBTEAMPropertiesTemplateAdd = [[DBRoute alloc] init:@"properties/template/add"
                                             namespace_:@"team"
                                             deprecated:@YES
                                             resultType:[DBFILEPROPERTIESAddTemplateResult class]
                                              errorType:[DBFILEPROPERTIESModifyTemplateError class]
                                                  attrs:@{
                                                    @"auth" : @"team",
                                                    @"host" : @"api",
                                                    @"style" : @"rpc"
                                                  }
                                  dataStructSerialBlock:nil
                                dataStructDeserialBlock:nil];
  }
  return DBTEAMPropertiesTemplateAdd;
}

+ (DBRoute *)DBTEAMPropertiesTemplateGet {
  if (!DBTEAMPropertiesTemplateGet) {
    DBTEAMPropertiesTemplateGet = [[DBRoute alloc] init:@"properties/template/get"
                                             namespace_:@"team"
                                             deprecated:@YES
                                             resultType:[DBFILEPROPERTIESGetTemplateResult class]
                                              errorType:[DBFILEPROPERTIESTemplateError class]
                                                  attrs:@{
                                                    @"auth" : @"team",
                                                    @"host" : @"api",
                                                    @"style" : @"rpc"
                                                  }
                                  dataStructSerialBlock:nil
                                dataStructDeserialBlock:nil];
  }
  return DBTEAMPropertiesTemplateGet;
}

+ (DBRoute *)DBTEAMPropertiesTemplateList {
  if (!DBTEAMPropertiesTemplateList) {
    DBTEAMPropertiesTemplateList = [[DBRoute alloc] init:@"properties/template/list"
                                              namespace_:@"team"
                                              deprecated:@YES
                                              resultType:[DBFILEPROPERTIESListTemplateResult class]
                                               errorType:[DBFILEPROPERTIESTemplateError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMPropertiesTemplateList;
}

+ (DBRoute *)DBTEAMPropertiesTemplateUpdate {
  if (!DBTEAMPropertiesTemplateUpdate) {
    DBTEAMPropertiesTemplateUpdate = [[DBRoute alloc] init:@"properties/template/update"
                                                namespace_:@"team"
                                                deprecated:@YES
                                                resultType:[DBFILEPROPERTIESUpdateTemplateResult class]
                                                 errorType:[DBFILEPROPERTIESModifyTemplateError class]
                                                     attrs:@{
                                                       @"auth" : @"team",
                                                       @"host" : @"api",
                                                       @"style" : @"rpc"
                                                     }
                                     dataStructSerialBlock:nil
                                   dataStructDeserialBlock:nil];
  }
  return DBTEAMPropertiesTemplateUpdate;
}

+ (DBRoute *)DBTEAMReportsGetActivity {
  if (!DBTEAMReportsGetActivity) {
    DBTEAMReportsGetActivity = [[DBRoute alloc] init:@"reports/get_activity"
                                          namespace_:@"team"
                                          deprecated:@NO
                                          resultType:[DBTEAMGetActivityReport class]
                                           errorType:[DBTEAMDateRangeError class]
                                               attrs:@{
                                                 @"auth" : @"team",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBTEAMReportsGetActivity;
}

+ (DBRoute *)DBTEAMReportsGetDevices {
  if (!DBTEAMReportsGetDevices) {
    DBTEAMReportsGetDevices = [[DBRoute alloc] init:@"reports/get_devices"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMGetDevicesReport class]
                                          errorType:[DBTEAMDateRangeError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMReportsGetDevices;
}

+ (DBRoute *)DBTEAMReportsGetMembership {
  if (!DBTEAMReportsGetMembership) {
    DBTEAMReportsGetMembership = [[DBRoute alloc] init:@"reports/get_membership"
                                            namespace_:@"team"
                                            deprecated:@NO
                                            resultType:[DBTEAMGetMembershipReport class]
                                             errorType:[DBTEAMDateRangeError class]
                                                 attrs:@{
                                                   @"auth" : @"team",
                                                   @"host" : @"api",
                                                   @"style" : @"rpc"
                                                 }
                                 dataStructSerialBlock:nil
                               dataStructDeserialBlock:nil];
  }
  return DBTEAMReportsGetMembership;
}

+ (DBRoute *)DBTEAMReportsGetStorage {
  if (!DBTEAMReportsGetStorage) {
    DBTEAMReportsGetStorage = [[DBRoute alloc] init:@"reports/get_storage"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMGetStorageReport class]
                                          errorType:[DBTEAMDateRangeError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMReportsGetStorage;
}

+ (DBRoute *)DBTEAMTeamFolderActivate {
  if (!DBTEAMTeamFolderActivate) {
    DBTEAMTeamFolderActivate = [[DBRoute alloc] init:@"team_folder/activate"
                                          namespace_:@"team"
                                          deprecated:@NO
                                          resultType:[DBTEAMTeamFolderMetadata class]
                                           errorType:[DBTEAMTeamFolderActivateError class]
                                               attrs:@{
                                                 @"auth" : @"team",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderActivate;
}

+ (DBRoute *)DBTEAMTeamFolderArchive {
  if (!DBTEAMTeamFolderArchive) {
    DBTEAMTeamFolderArchive = [[DBRoute alloc] init:@"team_folder/archive"
                                         namespace_:@"team"
                                         deprecated:@NO
                                         resultType:[DBTEAMTeamFolderArchiveLaunch class]
                                          errorType:[DBTEAMTeamFolderArchiveError class]
                                              attrs:@{
                                                @"auth" : @"team",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderArchive;
}

+ (DBRoute *)DBTEAMTeamFolderArchiveCheck {
  if (!DBTEAMTeamFolderArchiveCheck) {
    DBTEAMTeamFolderArchiveCheck = [[DBRoute alloc] init:@"team_folder/archive/check"
                                              namespace_:@"team"
                                              deprecated:@NO
                                              resultType:[DBTEAMTeamFolderArchiveJobStatus class]
                                               errorType:[DBASYNCPollError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderArchiveCheck;
}

+ (DBRoute *)DBTEAMTeamFolderCreate {
  if (!DBTEAMTeamFolderCreate) {
    DBTEAMTeamFolderCreate = [[DBRoute alloc] init:@"team_folder/create"
                                        namespace_:@"team"
                                        deprecated:@NO
                                        resultType:[DBTEAMTeamFolderMetadata class]
                                         errorType:[DBTEAMTeamFolderCreateError class]
                                             attrs:@{
                                               @"auth" : @"team",
                                               @"host" : @"api",
                                               @"style" : @"rpc"
                                             }
                             dataStructSerialBlock:nil
                           dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderCreate;
}

+ (DBRoute *)DBTEAMTeamFolderGetInfo {
  if (!DBTEAMTeamFolderGetInfo) {
    DBTEAMTeamFolderGetInfo = [[DBRoute alloc] init:@"team_folder/get_info"
        namespace_:@"team"
        deprecated:@NO
        resultType:[NSArray<DBTEAMTeamFolderGetInfoItem *> class]
        errorType:nil
        attrs:@{
          @"auth" : @"team",
          @"host" : @"api",
          @"style" : @"rpc"
        }
        dataStructSerialBlock:nil
        dataStructDeserialBlock:^id(id dataStruct) {
          return [DBArraySerializer deserialize:dataStruct
                                      withBlock:^id(id elem0) {
                                        return [DBTEAMTeamFolderGetInfoItemSerializer deserialize:elem0];
                                      }];
        }];
  }
  return DBTEAMTeamFolderGetInfo;
}

+ (DBRoute *)DBTEAMTeamFolderList {
  if (!DBTEAMTeamFolderList) {
    DBTEAMTeamFolderList = [[DBRoute alloc] init:@"team_folder/list"
                                      namespace_:@"team"
                                      deprecated:@NO
                                      resultType:[DBTEAMTeamFolderListResult class]
                                       errorType:[DBTEAMTeamFolderListError class]
                                           attrs:@{
                                             @"auth" : @"team",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderList;
}

+ (DBRoute *)DBTEAMTeamFolderListContinue {
  if (!DBTEAMTeamFolderListContinue) {
    DBTEAMTeamFolderListContinue = [[DBRoute alloc] init:@"team_folder/list/continue"
                                              namespace_:@"team"
                                              deprecated:@NO
                                              resultType:[DBTEAMTeamFolderListResult class]
                                               errorType:[DBTEAMTeamFolderListContinueError class]
                                                   attrs:@{
                                                     @"auth" : @"team",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderListContinue;
}

+ (DBRoute *)DBTEAMTeamFolderPermanentlyDelete {
  if (!DBTEAMTeamFolderPermanentlyDelete) {
    DBTEAMTeamFolderPermanentlyDelete = [[DBRoute alloc] init:@"team_folder/permanently_delete"
                                                   namespace_:@"team"
                                                   deprecated:@NO
                                                   resultType:nil
                                                    errorType:[DBTEAMTeamFolderPermanentlyDeleteError class]
                                                        attrs:@{
                                                          @"auth" : @"team",
                                                          @"host" : @"api",
                                                          @"style" : @"rpc"
                                                        }
                                        dataStructSerialBlock:nil
                                      dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderPermanentlyDelete;
}

+ (DBRoute *)DBTEAMTeamFolderRename {
  if (!DBTEAMTeamFolderRename) {
    DBTEAMTeamFolderRename = [[DBRoute alloc] init:@"team_folder/rename"
                                        namespace_:@"team"
                                        deprecated:@NO
                                        resultType:[DBTEAMTeamFolderMetadata class]
                                         errorType:[DBTEAMTeamFolderRenameError class]
                                             attrs:@{
                                               @"auth" : @"team",
                                               @"host" : @"api",
                                               @"style" : @"rpc"
                                             }
                             dataStructSerialBlock:nil
                           dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderRename;
}

+ (DBRoute *)DBTEAMTeamFolderUpdateSyncSettings {
  if (!DBTEAMTeamFolderUpdateSyncSettings) {
    DBTEAMTeamFolderUpdateSyncSettings = [[DBRoute alloc] init:@"team_folder/update_sync_settings"
                                                    namespace_:@"team"
                                                    deprecated:@NO
                                                    resultType:[DBTEAMTeamFolderMetadata class]
                                                     errorType:[DBTEAMTeamFolderUpdateSyncSettingsError class]
                                                         attrs:@{
                                                           @"auth" : @"team",
                                                           @"host" : @"api",
                                                           @"style" : @"rpc"
                                                         }
                                         dataStructSerialBlock:nil
                                       dataStructDeserialBlock:nil];
  }
  return DBTEAMTeamFolderUpdateSyncSettings;
}

+ (DBRoute *)DBTEAMTokenGetAuthenticatedAdmin {
  if (!DBTEAMTokenGetAuthenticatedAdmin) {
    DBTEAMTokenGetAuthenticatedAdmin = [[DBRoute alloc] init:@"token/get_authenticated_admin"
                                                  namespace_:@"team"
                                                  deprecated:@NO
                                                  resultType:[DBTEAMTokenGetAuthenticatedAdminResult class]
                                                   errorType:[DBTEAMTokenGetAuthenticatedAdminError class]
                                                       attrs:@{
                                                         @"auth" : @"team",
                                                         @"host" : @"api",
                                                         @"style" : @"rpc"
                                                       }
                                       dataStructSerialBlock:nil
                                     dataStructDeserialBlock:nil];
  }
  return DBTEAMTokenGetAuthenticatedAdmin;
}

@end
